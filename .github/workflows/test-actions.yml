name: test-actions
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      NO_COVERAGE_BADGE_UPDATE: 1
      PROMPT_NAME: test name
      PROMPT_EMAIL: test+email@example.com
      REDIS_URL: redis://default@localhost:6379
      REDIS_HOST: localhost
      REDIS_PORT: 6379
      DISCORD_CLIENT_ID: 1
      DISCORD_CLIENT_SECRET: 1
      DISCORD_INVITE_URL: 1
      DISCORD_REDIRECT_URL: 1
      DISCORD_BOT_TOKEN: 1
      DISCORD_BOT_PERMISSIONS: 1
      DISCORD_SERVER_ID: 1
      COOKIE_SECRET: 1
      PRODUCT_REMOTE_URL: ${{ secrets.PRODUCT_REMOTE_URL }}
      PRODUCT_REMOTE_TOKEN: ${{ secrets.PRODUCT_REMOTE_TOKEN }}
      PRODUCTFILE_REMOTE_URL: ${{ secrets.PRODUCTFILE_REMOTE_URL }}
      PRODUCTFILE_REMOTE_TOKEN: ${{ secrets.PRODUCTFILE_REMOTE_TOKEN }}
    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379
    steps:
      - run: uname -a
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: "18.x"
          registry-url: "https://registry.npmjs.org"
      - uses: antongolub/action-setup-bun@v1
      - run: |
          yarn install
      - run: yarn build
      # yarn coverage === c8 + yarn test:node
      - run: yarn coverage
      - name: test:node with PORT
        run: yarn test:node
        env:
          PORT: 3400
      - name: test:bun require.cache
        run: |
          bun example.js
          bun example.mjs
      - name: test:bun with PORT
        run: yarn test:bun
        env:
          PORT: 3401